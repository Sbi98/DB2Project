package entity;

import javax.persistence.*;
import java.util.List;

@Entity
public class User {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)//Unique id generated by the persistence provider
    private int id;
    private String username;
    private String password;
    private String email;
    private byte isBlocked;
    private byte isAdmin;

    @OneToMany(
        fetch = FetchType.EAGER,
        mappedBy = "user",
        // quando viene effettuata l'operazione X su di me (User), effettuala anche a questa relazione (Access)
        cascade = { CascadeType.PERSIST, CascadeType.REMOVE, CascadeType.REFRESH },
        orphanRemoval = true //se viene tolto un accesso dalla lista, cancella quell'accesso
    )
    private List<Access> accesses;

    @OneToMany(
        fetch = FetchType.EAGER,
        mappedBy = "user",
        // quando viene effettuata l'operazione X su di me (User), effettuala anche a questa relazione (Review)
        cascade = { CascadeType.PERSIST, CascadeType.REMOVE, CascadeType.REFRESH },
        orphanRemoval = true //se viene tolta una review dalla lista, cancella quella review
    )
    private List<Review> reviews;


    public List<Access> getAccesses() { return accesses; }

    public List<Review> getReviews() { return reviews; }

    public void addAccess(Access a) {
        accesses.add(a);
    }



    public int getId() { return id; }
    public void setId(int id) { this.id = id; }

    public String getUsername() { return username; }
    public void setUsername(String username) { this.username = username; }

    public String getPassword() { return password; }
    public void setPassword(String password) { this.password = password; }

    public String getEmail() { return email; }
    public void setEmail(String email) { this.email = email; }

    public byte getIsBlocked() { return isBlocked; }
    public void setIsBlocked(byte isBlocked) { this.isBlocked = isBlocked; }

    public byte getIsAdmin() { return isAdmin; }
    public void setIsAdmin(byte isAdmin) { this.isAdmin = isAdmin; }



    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        User user = (User) o;
        return id == user.id;
    }

    @Override
    public int hashCode() { return id; }
}
